type Query {
    users(query: String): [User!]!
    posts(query: String): [Post!]!
    comments: [Comment!]!
    me: User!
    post: Post!
}

type Mutation{
    createUser(user: createUserInput) : User!
    deleteUser(id: ID!): User!
    updateUser(id: ID!, data: UpdateUserInput): User!

    createPost(post: createPostInput!): Post!
    deletePost(id: ID!): Post!
    updatePost(id: ID!, data: UpdatePostInput) : Post!
    
    createComment(comment: createCommentInput): Comment!
    deleteComment(id: ID!) : Comment!
    updateComment(id: ID!, data: UpdateCommentInput): Comment!
}

input createUserInput{
    name: String!
    email : String!
    age: Int
}

input UpdateUserInput{
    name: String
    email : String
    age: Int
}

input createPostInput{
    title: String!,
    body: String!,
    author: ID!,
    published: Boolean
}

input UpdatePostInput{
    title: String
    body : String
    published: Boolean
}
input createCommentInput{
    text: String!,
    author: String!,
    post: String!
}

input UpdateCommentInput{
    text: String
}

type User {
    id: ID!
    name: String!
    email: String!
    age: Int
    posts: [Post!]!
    comments: [Comment!]!
}

type Post {
    id: ID!
    title: String!
    body: String!
    published: Boolean!
    author: User!
    comments: [Comment!]!
}

type Comment {
    id: ID!
    text: String!
    author: User!
    post: Post!
}